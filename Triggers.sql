-----SECUENCIA DE AUDITORIA---
CREATE SEQUENCE SEQ_AUDITORIA
  INCREMENT BY 1
  START WITH 1
  NOCACHE
  NOCYCLE;

---TABLA DE AUDITORÍA PARA LA CALIFICACIÓN---

CREATE TABLE AUDITOCAL
(
K_AUDITO NUMBER(11) NOT NULL,
N_NOMTABLA VARCHAR(20) NOT NULL,
K_ID NUMBER (7) NOT NULL,
N_USUARIO VARCHAR2(10) NOT NULL, 
V_VALORANTIGUO NUMBER(1) NOT NULL,
V_NUEVOVALOR NUMBER(1) NOT NULL,
CONSTRAINT AUDITOCAL__PK PRIMARY KEY 
  (
    K_AUDITO
  )
  ENABLE 
);


COMMENT ON COLUMN AUDITOCAL.K_AUDITO IS 'Numero de secuencia'; 
COMMENT ON COLUMN AUDITOCAL.K_AUDITO IS 'Nombre de tabla'; 
COMMENT ON COLUMN AUDITOCAL.K_ID IS 'ID de representante';
COMMENT ON COLUMN AUDITOCAL.N_USUARIO IS 'Usuario conectado a la sesion';
COMMENT ON COLUMN AUDITOCAL.V_VALORANTIGUO IS ' Anterior calificación del representante';
COMMENT ON COLUMN AUDITOCAL.V_NUEVOVALOR  IS 'Nueva calificación del representante';


--TRIGUER PARA AUDITAR MODIFICACION DE CALIFICACIÓN DE REPRESENTANTE---

CREATE OR REPLACE TRIGGER TG_CALIFICACION_REPRESENTANTE
    AFTER UPDATE OF V_VALORACION ON CALIFICACION
    FOR EACH ROW
BEGIN
  INSERT INTO AUDITOCAL VALUES(SEQ_AUDITORIA.NEXTVAL, 'CALIFICACION', :OLD.K_ID , USER, :OLD.V_VALORACION, :NEW.V_VALORACION);
END TG_CALIFICACION_REPRESENTANTE;

---TRIGUER PARA AUDITAR MODIFICACIÓN DE COMISIONES---

CREATE OR REPLACE TRIGGER TG_COMISION_REPRESENTANTE
    AFTER UPDATE OF V_COMISION ON CLASIFICACION
    FOR EACH ROW
BEGIN
  INSERT INTO AUDITOCAL VALUES(SEQ_AUDITORIA.NEXTVAL, 'CLASIFICACION', :OLD.K_ID , USER, :OLD.V_COMISION, :NEW.V_COMISION);
END TG_CALIFICACION_REPRESENTANTE;

---TRIGUER PARA AUDITAR VENTAS---

CREATE OR REPLACE TRIGGER TG_VENTAS
    AFTER UPDATE OF I_ESTADO ON PEDIDO
    FOR EACH ROW
BEGIN
  INSERT INTO AUDITOCAL VALUES(SEQ_AUDITORIA.NEXTVAL, 'CLASIFICACION', :OLD.K_N_FACTURA , USER, :OLD.I_ESTADO, :NEW.I_ESTADO);
END TG_VENTAS;

/*------------------------------------------------------------------------------
Trigger que se encarga de sumar o restar el stock asociado a un producto cuando se borra
o se agrega una entrada con este producto a la tabla detalle_pedido.
*/
CREATE OR REPLACE TRIGGER TG_STOCK_PRODUCTO
    BEFORE INSERT OR DELETE ON DETALLE_PEDIDO
    FOR EACH ROW
BEGIN
    IF INSERTING THEN
        UPDATE INVENTARIO SET V_DISPONIBILIDAD=V_DISPONIBILIDAD-:NEW.V_CANTIDAD
        WHERE K_ID=:NEW.F_ID_INVENTARIO;
    ELSE
        UPDATE INVENTARIO SET V_DISPONIBILIDAD=V_DISPONIBILIDAD+:OLD.V_CANTIDAD
        WHERE K_ID=:OLD.F_ID_INVENTARIO;
    END IF;
END TG_STOCK_PRODUCTO;
/